//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityLibrary
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Shop_2Entities : DbContext
    {
        public Shop_2Entities()
            : base("name=Shop_2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<ProductsMoving> ProductsMoving { get; set; }
        public virtual DbSet<UserRoles> UserRoles { get; set; }
        public virtual DbSet<Users> Users { get; set; }
    
        public virtual int ai_delete_products(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ai_delete_products", idParameter);
        }
    
        public virtual int ai_delete_products_moving(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ai_delete_products_moving", idParameter);
        }
    
        public virtual int ai_delete_users(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ai_delete_users", idParameter);
        }
    
        public virtual int ai_insert_products(Nullable<int> id, string name, Nullable<decimal> price_buy, Nullable<decimal> price_sell, string uom)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var price_buyParameter = price_buy.HasValue ?
                new ObjectParameter("price_buy", price_buy) :
                new ObjectParameter("price_buy", typeof(decimal));
    
            var price_sellParameter = price_sell.HasValue ?
                new ObjectParameter("price_sell", price_sell) :
                new ObjectParameter("price_sell", typeof(decimal));
    
            var uomParameter = uom != null ?
                new ObjectParameter("uom", uom) :
                new ObjectParameter("uom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ai_insert_products", idParameter, nameParameter, price_buyParameter, price_sellParameter, uomParameter);
        }
    
        public virtual int ai_insert_products_moving(Nullable<int> id, Nullable<int> id_product, Nullable<decimal> count_store, Nullable<decimal> count_shop, Nullable<decimal> sold)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_productParameter = id_product.HasValue ?
                new ObjectParameter("id_product", id_product) :
                new ObjectParameter("id_product", typeof(int));
    
            var count_storeParameter = count_store.HasValue ?
                new ObjectParameter("count_store", count_store) :
                new ObjectParameter("count_store", typeof(decimal));
    
            var count_shopParameter = count_shop.HasValue ?
                new ObjectParameter("count_shop", count_shop) :
                new ObjectParameter("count_shop", typeof(decimal));
    
            var soldParameter = sold.HasValue ?
                new ObjectParameter("sold", sold) :
                new ObjectParameter("sold", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ai_insert_products_moving", idParameter, id_productParameter, count_storeParameter, count_shopParameter, soldParameter);
        }
    
        public virtual int ai_insert_users(Nullable<int> id, string login, string password, Nullable<int> id_role)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var id_roleParameter = id_role.HasValue ?
                new ObjectParameter("id_role", id_role) :
                new ObjectParameter("id_role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ai_insert_users", idParameter, loginParameter, passwordParameter, id_roleParameter);
        }
    
        public virtual int ai_update_products(Nullable<int> id, string name, Nullable<decimal> price_buy, Nullable<decimal> price_sell, string uom)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var price_buyParameter = price_buy.HasValue ?
                new ObjectParameter("price_buy", price_buy) :
                new ObjectParameter("price_buy", typeof(decimal));
    
            var price_sellParameter = price_sell.HasValue ?
                new ObjectParameter("price_sell", price_sell) :
                new ObjectParameter("price_sell", typeof(decimal));
    
            var uomParameter = uom != null ?
                new ObjectParameter("uom", uom) :
                new ObjectParameter("uom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ai_update_products", idParameter, nameParameter, price_buyParameter, price_sellParameter, uomParameter);
        }
    
        public virtual int ai_update_products_moving(Nullable<int> id, Nullable<int> id_product, Nullable<decimal> count_store, Nullable<decimal> count_shop, Nullable<decimal> sold)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_productParameter = id_product.HasValue ?
                new ObjectParameter("id_product", id_product) :
                new ObjectParameter("id_product", typeof(int));
    
            var count_storeParameter = count_store.HasValue ?
                new ObjectParameter("count_store", count_store) :
                new ObjectParameter("count_store", typeof(decimal));
    
            var count_shopParameter = count_shop.HasValue ?
                new ObjectParameter("count_shop", count_shop) :
                new ObjectParameter("count_shop", typeof(decimal));
    
            var soldParameter = sold.HasValue ?
                new ObjectParameter("sold", sold) :
                new ObjectParameter("sold", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ai_update_products_moving", idParameter, id_productParameter, count_storeParameter, count_shopParameter, soldParameter);
        }
    
        public virtual int ai_update_users(Nullable<int> id, string login, string password, Nullable<int> id_role)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var id_roleParameter = id_role.HasValue ?
                new ObjectParameter("id_role", id_role) :
                new ObjectParameter("id_role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ai_update_users", idParameter, loginParameter, passwordParameter, id_roleParameter);
        }
    }
}
